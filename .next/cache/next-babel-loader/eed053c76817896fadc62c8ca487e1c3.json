{"ast":null,"code":"var _jsxFileName = \"/Users/pprabeesh/code/react-hcard-builder/components/HCardForm/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { HCARD_BUILDER_TITLE, PERSONAL_DETAILS_LEGEND, ADDRESS_LEGEND, INPUT_FIELDS_PERSONAL_DETAILS, INPUT_FIELDS_ADDRESS, BTN_CREATE_HACARD, BTN_UPLOAD_AVATAR } from \"./constants\";\nimport { HCardFormSection, HCardFormTitle, FieldSet, Legend, FieldSetContainer, Label, LabelText, Input, ButtonsContainer, Button, UploadButton } from \"./styled\";\nexport const HCardForm = ({\n  hCardState,\n  setAvatarState,\n  handleChange\n}) => {\n  const fileInput = useRef(null);\n\n  const handleOnChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    handleChange(value, name);\n  };\n\n  const handleOnUploadClick = e => {\n    fileInput.current.click();\n  };\n\n  const handleOnUpload = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setAvatarState({\n        file: file,\n        previewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return __jsx(HCardFormSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(HCardFormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, HCARD_BUILDER_TITLE), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(FieldSet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, PERSONAL_DETAILS_LEGEND), __jsx(FieldSetContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, INPUT_FIELDS_PERSONAL_DETAILS.map(input => {\n    const {\n      label,\n      id,\n      type\n    } = input;\n    return __jsx(Label, {\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, __jsx(LabelText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, label), __jsx(Input, {\n      id: id,\n      name: id,\n      type: type,\n      value: hCardState[id],\n      onChange: handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }));\n  }))), __jsx(FieldSet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, ADDRESS_LEGEND), __jsx(FieldSetContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, INPUT_FIELDS_ADDRESS.map(input => {\n    const {\n      label,\n      id,\n      type\n    } = input;\n    return __jsx(Label, {\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, __jsx(LabelText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, label), __jsx(Input, {\n      id: id,\n      name: id,\n      type: type,\n      value: hCardState[id],\n      onChange: handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }));\n  }))), __jsx(ButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"button\",\n    onClick: handleOnUploadClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, BTN_UPLOAD_AVATAR), __jsx(UploadButton, {\n    type: \"file\",\n    ref: fileInput,\n    onChange: handleOnUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"button\",\n    buttonStyle: \"primary\",\n    onClick: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, BTN_CREATE_HACARD))));\n};","map":{"version":3,"sources":["/Users/pprabeesh/code/react-hcard-builder/components/HCardForm/index.tsx"],"names":["React","useRef","HCARD_BUILDER_TITLE","PERSONAL_DETAILS_LEGEND","ADDRESS_LEGEND","INPUT_FIELDS_PERSONAL_DETAILS","INPUT_FIELDS_ADDRESS","BTN_CREATE_HACARD","BTN_UPLOAD_AVATAR","HCardFormSection","HCardFormTitle","FieldSet","Legend","FieldSetContainer","Label","LabelText","Input","ButtonsContainer","Button","UploadButton","HCardForm","hCardState","setAvatarState","handleChange","fileInput","handleOnChange","e","value","name","target","handleOnUploadClick","current","click","handleOnUpload","preventDefault","reader","FileReader","file","files","onloadend","previewUrl","result","readAsDataURL","map","input","label","id","type"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\n\nimport { Props } from \"./types\";\n\nimport {\n  HCARD_BUILDER_TITLE,\n  PERSONAL_DETAILS_LEGEND,\n  ADDRESS_LEGEND,\n  INPUT_FIELDS_PERSONAL_DETAILS,\n  INPUT_FIELDS_ADDRESS,\n  BTN_CREATE_HACARD,\n  BTN_UPLOAD_AVATAR,\n} from \"./constants\";\n\nimport {\n  HCardFormSection,\n  HCardFormTitle,\n  FieldSet,\n  Legend,\n  FieldSetContainer,\n  Label,\n  LabelText,\n  Input,\n  ButtonsContainer,\n  Button,\n  UploadButton,\n} from \"./styled\";\n\nexport const HCardForm = ({\n  hCardState,\n  setAvatarState,\n  handleChange,\n}: Props) => {\n  const fileInput = useRef(null);\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    handleChange(value, name);\n  };\n\n  const handleOnUploadClick = (e: React.MouseEvent<HTMLInputElement>) => {\n    fileInput.current.click();\n  };\n  const handleOnUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setAvatarState({\n        file: file,\n        previewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <HCardFormSection>\n      <HCardFormTitle>{HCARD_BUILDER_TITLE}</HCardFormTitle>\n      <form>\n        <FieldSet>\n          <Legend>{PERSONAL_DETAILS_LEGEND}</Legend>\n          <FieldSetContainer>\n            {INPUT_FIELDS_PERSONAL_DETAILS.map((input) => {\n              const { label, id, type } = input;\n              return (\n                <Label htmlFor={id}>\n                  <LabelText>{label}</LabelText>\n                  <Input\n                    id={id}\n                    name={id}\n                    type={type}\n                    value={hCardState[id]}\n                    onChange={handleOnChange}\n                  />\n                </Label>\n              );\n            })}\n          </FieldSetContainer>\n        </FieldSet>\n        <FieldSet>\n          <Legend>{ADDRESS_LEGEND}</Legend>\n          <FieldSetContainer>\n            {INPUT_FIELDS_ADDRESS.map((input) => {\n              const { label, id, type } = input;\n              return (\n                <Label htmlFor={id}>\n                  <LabelText>{label}</LabelText>\n                  <Input\n                    id={id}\n                    name={id}\n                    type={type}\n                    value={hCardState[id]}\n                    onChange={handleOnChange}\n                  />\n                </Label>\n              );\n            })}\n          </FieldSetContainer>\n        </FieldSet>\n        <ButtonsContainer>\n          <Button type=\"button\" onClick={handleOnUploadClick}>\n            {BTN_UPLOAD_AVATAR}\n          </Button>\n          <UploadButton type=\"file\" ref={fileInput} onChange={handleOnUpload} />\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={(e) => e.preventDefault()}\n          >\n            {BTN_CREATE_HACARD}\n          </Button>\n        </ButtonsContainer>\n      </form>\n    </HCardFormSection>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}